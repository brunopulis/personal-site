---
import { Image } from "astro:assets";

interface AuthorProps {
	name: string;
	photo: string;
	url: string;
}

interface WebmentionProps {
	author: AuthorProps;
	"wm-received": string;
	"wm-property": string;
}

interface Props {
	webmentions: WebmentionProps[];
}

const { webmentions } = Astro.props;

const showDate = (webmention: string) =>
	new Date(webmention).toLocaleDateString(undefined, {
		day: "numeric",
		month: "long",
		year: "numeric",
	});
---

{
  webmentions.length > 0 ? (
    <section aria-label="Webmentions">
      <h2>Webmentions</h2>
      <ul>
        {webmentions.map((webmention: WebmentionProps) => (
          <li>
            <div class="avatar-and-author">
              {webmention.author.photo ? <Image alt="" height="50" src={webmention.author.photo} width="50" /> : null}
              <a href={webmention.author.url} rel="author">
                {webmention.author.name}
              </a>
            </div>
            <div class="information">
              {webmention['wm-property'] === 'like-of' ? (
                <p>
                  Liked em
                  <time aria-hidden="true" datetime={webmention['wm-received']}>
                    {showDate(webmention['wm-received'])}
                  </time>
                </p>
              ) : null}
              {webmention['wm-property'] === 'repost-of' ? (
                <p>
                  Repostado em
                  <time aria-hidden="true" datetime={webmention['wm-received']}>
                    {showDate(webmention['wm-received'])}
                  </time>
                </p>
              ) : null}
            </div>
          </li>
        ))}
      </ul>
    </section>
  ) : null
}

<style>
  section {
    margin-top: var(--space-l);
    border-radius: 10px;
  }

  h2 {
    margin-top: var(--space-s);
    font-size: var(--step-2);
  }

  h3 {
    font-size: var(--step-1);
  }

  .info {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: var(--space-xs);
    margin-top: var(--space-xs);
    font-size: var(--step-0);
  }

  a {
    width: fit-content;
    font-size: var(--step-0);
  }

  ul {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-m);
    padding: 0;
  }

  li {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: var(--space-xs);
    border-radius: 10px;
    padding: var(--space-xs);
    width: fit-content;
    list-style-type: none;
  }

  .avatar-and-author {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--space-xs);
    width: fit-content;
  }

  .avatar-and-author div {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
  }

  img {
    margin: 0;
    border-radius: 50%;
    max-width: 40px;
    max-height: 40px;
  }
</style>
