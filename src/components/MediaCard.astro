---
import { Star } from "@lucide/astro";

interface Props {
	title: string;
	author?: string[];
	director?: string;
	cover: string;
	description: string;
	quotes?: string[];
	rating: number;
	tags: string[];
	imageHeight?: string;
}

const {
	title,
	author,
	director,
	cover,
	description,
	quotes,
	rating,
	tags,
	imageHeight = "h-72", // altura padrão, pode ser sobrescrita
} = Astro.props;
---

<article class="overflow-hidden rounded-xl border border-gray-100 bg-white shadow-sm transition hover:shadow-md">
  <img src={cover} alt={`Capa de ${title}`} class={`w-full object-cover ${imageHeight}`} />

  <div class="p-6">
    <h3 class="mb-1 text-xl font-semibold">{title}</h3>
    {author && <p class="text-errie-black-900 mb-2 text-sm">por {author}</p>}
    {director && <p class="text-errie-black-900 mb-2 text-sm">Direção: {director}</p>}

    <p class="mb-4 text-sm text-gray-700">{description}</p>

    {
      quotes && quotes.length > 0 && (
        <blockquote class="mb-4 border-l-4 border-red-500 pl-3 text-gray-600 italic">"{quotes[0]}"</blockquote>
      )
    }

    <div class="flex items-center gap-2">
      {
        Array.from({ length: rating }).map((_, index) => (
          <Star key={index} class="h-4 w-4 text-yellow-500" aria-hidden="true" />
        ))
      }
    </div>

    <div class="mt-4 flex flex-wrap gap-2">
      {tags.map((tag) => <span class="rounded-full bg-gray-100 px-3 py-1 text-xs text-gray-600">{tag}</span>)}
    </div>
  </div>
</article>
