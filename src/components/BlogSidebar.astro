---
import type { CollectionEntry } from "astro:content";
import site from "@/data/site.config.json";

interface Props {
	tags: [string, number][];
}

const { tags } = Astro.props;
---

<aside class="space-y-8">
  <div class="rounded-xl border border-gray-200 bg-white p-6">
    <h3 class="mb-3 text-xl font-bold">
      Newsletter <span aria-hidden="true">ðŸ“¬</span>
    </h3>
    <p class="text-errie-black-900 mb-4 text-sm">Receba os novos artigos direto no seu email. Sem spam, prometo.</p>
    <a
      href={site.socialMidia.substack}
      target="_blank"
      rel="noopener noreferrer"
      class="bg-blood-red-800 hover:bg-blood-red-800/90 block w-full rounded-lg px-4 py-3 text-center font-semibold text-white transition"
    >
      Assinar newsletter
    </a>
  </div>

  <div class="rounded-xl border border-gray-200 bg-white p-6">
    <h3 class="mb-4 flex items-center gap-2 text-xl font-bold text-gray-900">
      Tags populares
      <span class="ml-2" aria-hidden="true">ðŸ”–</span>
    </h3>

    <div class="flex flex-wrap gap-2">
      {
        tags.map(([tag, count]) => {
          // Calcula o tamanho da fonte baseado na contagem
          const size = count > 5 ? 'text-lg' : count > 3 ? 'text-base' : 'text-sm'
          const weight = count > 5 ? 'font-bold' : count > 3 ? 'font-semibold' : 'font-medium'

          return (
            <a
              href={`/tags/${tag.toLowerCase()}`}
              class:list={[
                'group flex items-center gap-1 rounded-full bg-gray-100 px-3 py-1',
                'hover:bg-blood-red-800 transition hover:text-white',
                size,
                weight,
              ]}
            >
              <span>{tag}</span>
              <span class="text-xs text-gray-500 group-hover:text-white">({count})</span>
            </a>
          )
        })
      }
    </div>
  </div>
</aside>
