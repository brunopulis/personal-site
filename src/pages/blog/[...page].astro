---
import type { GetStaticPathsOptions, Page } from "astro";
import { type CollectionEntry, getCollection } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import Header from "@/components/layout/Header.astro";
import HeroSection from "@/components/layout/HeroSection.astro";
import Footer from "@/components/layout/Footer.astro";
import Pagination from "@/components/Pagination.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = await getCollection("blog", ({ data }) => {
    return data.draft !== true;
  });

  const sortedPosts = posts.sort((a, b) => {
    return (
      new Date(b.data.publishDate).valueOf() -
      new Date(a.data.publishDate).valueOf()
    );
  });

  return paginate(sortedPosts, { pageSize: 6 });
}

type Props = { page: Page<CollectionEntry<"blog">> };

const { page } = Astro.props;
const posts = page.data;

function formatDate(date: string | number | Date) {
  const formatter = new Intl.DateTimeFormat("pt-BR", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });

  return formatter.format(new Date(date));
}

function toISOString(dateString: string) {
  const date = new Date(dateString);
  return date.toISOString();
}
---

<Layout
  title="Blog - Bruno Pulis"
  description="Artigos sobre desenvolvimento, acessibilidade e qualidade de software"
>
  <Header />
  <main>
    <HeroSection
      title="Textos"
      description="Artigos, reviews, opiniões pessoais e pitadas ácidas de humor."
    />

    <div class="container-custom py-8">
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          posts.map((post, index) => (
            <div class="card border border-gray-200 dark:border-gray-700 overflow-hidden slide-up" style={'animation-delay: ' + (index * 100) + 'ms'}>
              <a href={'/blog/' + post.id} class="block u-url">
              </a>
              <div class="p-6">
                <span class="text-sm font-medium text-primary-600 dark:text-primary-400">{post.category}</span>
                <span class="mx-2 text-gray-300 dark:text-gray-600">•</span>
                <time datetime={toISOString(String(post.data.publishDate))} class="text-sm text-gray-500 dark:text-gray-400 dt-published">
                  {formatDate(post.data.publishDate)}
                </time>
              </div>
              <a href={'/blog/' + post.id} class="block u-url mb-3">
                <h2 class="text-xl font-semibold text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
                  {post.title}
                </h2>
              </a>
              <p class="text-gray-600 dark:text-gray-300 mb-6">{post.excerpt}</p>
            </div>
          )
        )}
      </div>

      <Pagination
        currentPage={page.currentPage}
        lastPage={page.lastPage}
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
      />
    </div>
  </main>
  <Footer />
</Layout>
