---
import { type CollectionEntry, getCollection, render } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import Header from "@/components/layout/Header.astro";
import Author from "@/components/Author.astro";
import Footer from "@/components/layout/Footer.astro";
import { slugify } from "@/utils/common-utils";

// Gerar rotas para todos os posts
export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map(post => ({
    params: { slug: post.id },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<"blog">;
  prevPost: CollectionEntry<"blog">;
  nextPost: CollectionEntry<"blog">;
};

// Receber o post das props
const { post } = Astro.props;
const { Content } = await render(post);

// Formatar data para pt-BR
const formattedDate = new Date(post.data.publishDate).toLocaleDateString(
  "pt-BR",
  {
    year: "numeric",
    month: "long",
    day: "numeric",
  }
);

const isoDate = new Date(post.data.publishDate).toISOString();
---

<Layout
  title={`${post.data.title} + "Bruno Pulis"`}
  description="Artigos sobre desenvolvimento, acessibilidade e qualidade de software"
>
  <Header />
  <main>
    <div
      class="text-primary my-5"
    >
      <h1 class="mb-4 text-4xl font-medium sm:text-5xl">
        {post.data.title}
      </h1><div
        class="text-primary-small flex flex-wrap items-center gap-x-5 gap-y-2"
      >
        <time datetime={isoDate}>{formattedDate}</time>
        <div
          class="text-primary-small flex flex-wrap items-center gap-x-5 gap-y-2 font-mono text-xs"
        >
          {
            post.data.tags.length > 0 && (
              <div class="flex flex-wrap gap-x-5 gap-y-1 text-sm">
                {post.data.tags.map(tag => (
                  <a
                    class="bg-opacity-10 bg-primary text-main rounded px-1 py-0.5 hover:underline"
                    href={`/tags/${slugify(tag)}`}
                  >
                    #{tag}
                  </a>
                ))}
              </div>
            )
          }
        </div>
      </div>
    </div>
   
    <article class="my-8 grid max-w-2xl justify-items-start gap-8">
      {
        post.data.coverImage && (
          <img
            src={post.data.coverImage}
            class="mb-10 h-auto w-full rounded-xl object-cover"
            alt={post.data.title || ""}
            style="max-height: 500px;"
          />
        )
      }
      <div class="prose prose-lg dark:prose-invert max-w-none">
        <Content />
        <Author />
      </div>
    </article>
    <Footer />
  </main>
</Layout>
