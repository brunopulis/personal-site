---
import Layout from '@/layouts/Layout.astro';
import Header from '@/components/Header.astro';
import HeroSection from '@/components/HeroSection.astro';
import Pagination from '@/components/Pagination.astro';
import Footer from '@/components/Footer.astro';

import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';

import fallbackImage from '@/assets/images/fallback.webp';

// Obter todos os posts do blog
const allPosts = await getCollection('blog');

// Filtrar posts publicados e ordenar por data (mais recente primeiro)
const publishedPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf());

// Configuração da paginação
const POSTS_PER_PAGE = 20;
const totalPosts = publishedPosts.length;
const totalPages = Math.ceil(totalPosts / POSTS_PER_PAGE);
const currentPage = 1; // Primeira página

// Posts para a página atual
const startIndex = (currentPage - 1) * POSTS_PER_PAGE;
const endIndex = startIndex + POSTS_PER_PAGE;
const currentPosts = publishedPosts.slice(startIndex, endIndex);

// Função para formatar data
function formatDate(date: Date) {
  return new Intl.DateTimeFormat('pt-BR', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
}
---

<Layout title="Blog - Bruno Pulis" description="Artigos sobre desenvolvimento, acessibilidade e qualidade de software">
  <Header />
  <HeroSection
    title="Blog"
    description="Compartilhando conhecimento sobre desenvolvimento, acessibilidade e qualidade de software."
  />
  <main>
    <!-- Filtro por Categorias -->
    <div class="container-custom py-8">
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {currentPosts.map((post) => (
        <div
          class="card border border-gray-200 dark:border-gray-700 overflow-hidden slide-up"
        >
          <a href={`/blog/${post.id}`} class="block">
            <Image
              src={post.data.coverImage || fallbackImage}
              alt={post.data.title || ''}
              class="w-full h-48 object-cover"
              width={382}
              height={192}
              loading="lazy"
              inferSize={true}
            />
          </a>
          <div class="p-6">
            <div class="flex items-center mb-4">
              <span class="text-sm font-medium text-primary-600 dark:text-primary-400">
                {post.data.category}
              </span>
              <span class="mx-2 text-gray-300 dark:text-gray-600">•</span>
              <time class="text-sm text-gray-500 dark:text-gray-400">
                {new Date(post.data.date).toLocaleDateString('pt-BR', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </time>
            </div>
            <a href={`/blog/${post.id}`} class="block mb-3">
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
                {post.data.title}
              </h3>
            </a>
            <p class="text-gray-600 dark:text-gray-300 mb-6">
              {post.data.excerpt}
            </p>
          </div>
        </div>
      ))}
      </div>
    </div>
  </main>
  <Footer />
</Layout>